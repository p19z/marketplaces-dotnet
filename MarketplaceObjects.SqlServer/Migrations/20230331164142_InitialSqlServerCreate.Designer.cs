// <auto-generated />
using System;
using MarketplaceObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketplaceObjects.SqlServer.Migrations
{
    [DbContext(typeof(MarketplaceSqlServerContext))]
    [Migration("20230331164142_InitialSqlServerCreate")]
    partial class InitialSqlServerCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketplaceObjects.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarketplaceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("MarketplaceId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MarketplaceObjects.Marketplace", b =>
                {
                    b.Property<int>("MarketplaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarketplaceId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarketplaceId");

                    b.ToTable("Marketplaces");
                });

            modelBuilder.Entity("MarketplaceObjects.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("LastChangeTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OfferId");

                    b.HasIndex("UserId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("MarketplaceObjects.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<byte[]>("LastChangeTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MarketplaceObjects.RowsCounter", b =>
                {
                    b.Property<string>("CounterName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CounterName");

                    b.Property<int>("CounterValue")
                        .HasColumnType("int")
                        .HasColumnName("CounterValue");

                    b.ToTable((string)null);

                    b.ToView("View_AllObjectsCounts", (string)null);
                });

            modelBuilder.Entity("MarketplaceObjects.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("LastChangeTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MarketplaceObjects.Category", b =>
                {
                    b.HasOne("MarketplaceObjects.Marketplace", null)
                        .WithMany("Categories")
                        .HasForeignKey("MarketplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarketplaceObjects.Offer", b =>
                {
                    b.HasOne("MarketplaceObjects.User", null)
                        .WithMany("Offers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MarketplaceObjects.PostalAddress", "Address", b1 =>
                        {
                            b1.Property<int>("OfferId")
                                .HasColumnType("int");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OfferId");

                            b1.ToTable("Offers");

                            b1.WithOwner()
                                .HasForeignKey("OfferId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("MarketplaceObjects.Order", b =>
                {
                    b.HasOne("MarketplaceObjects.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MarketplaceObjects.OrderDetails", "OrderDetails", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .HasColumnType("int");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsOne("MarketplaceObjects.ReservationProposal", "ReservationProposal", b2 =>
                                {
                                    b2.Property<int>("OrderDetailsOrderId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime>("EndTime")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime>("StartTime")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("OrderDetailsOrderId");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderDetailsOrderId");
                                });

                            b1.Navigation("ReservationProposal");
                        });

                    b.Navigation("OrderDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("MarketplaceObjects.Marketplace", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("MarketplaceObjects.User", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
