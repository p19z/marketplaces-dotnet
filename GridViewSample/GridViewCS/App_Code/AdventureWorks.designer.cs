#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdventureWorksLT_Data")]
public partial class AdventureWorksDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertSalesOrderDetail(SalesOrderDetail instance);
  partial void UpdateSalesOrderDetail(SalesOrderDetail instance);
  partial void DeleteSalesOrderDetail(SalesOrderDetail instance);
  partial void InsertSalesOrderHeader(SalesOrderHeader instance);
  partial void UpdateSalesOrderHeader(SalesOrderHeader instance);
  partial void DeleteSalesOrderHeader(SalesOrderHeader instance);
  #endregion
	
	public AdventureWorksDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AWLTConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public AdventureWorksDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdventureWorksDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdventureWorksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AdventureWorksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<SalesOrderDetail> SalesOrderDetails
	{
		get
		{
			return this.GetTable<SalesOrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<SalesOrderHeader> SalesOrderHeaders
	{
		get
		{
			return this.GetTable<SalesOrderHeader>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="SalesLT.SalesOrderDetail")]
public partial class SalesOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesOrderID;
	
	private int _SalesOrderDetailID;
	
	private short _OrderQty;
	
	private int _ProductID;
	
	private decimal _UnitPrice;
	
	private decimal _UnitPriceDiscount;
	
	private decimal _LineTotal;
	
	private System.Guid _rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntityRef<SalesOrderHeader> _SalesOrderHeader;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnSalesOrderDetailIDChanging(int value);
    partial void OnSalesOrderDetailIDChanged();
    partial void OnOrderQtyChanging(short value);
    partial void OnOrderQtyChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnUnitPriceDiscountChanging(decimal value);
    partial void OnUnitPriceDiscountChanged();
    partial void OnLineTotalChanging(decimal value);
    partial void OnLineTotalChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public SalesOrderDetail()
	{
		this._SalesOrderHeader = default(EntityRef<SalesOrderHeader>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SalesOrderID
	{
		get
		{
			return this._SalesOrderID;
		}
		set
		{
			if ((this._SalesOrderID != value))
			{
				if (this._SalesOrderHeader.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesOrderIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderID = value;
				this.SendPropertyChanged("SalesOrderID");
				this.OnSalesOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesOrderDetailID
	{
		get
		{
			return this._SalesOrderDetailID;
		}
		set
		{
			if ((this._SalesOrderDetailID != value))
			{
				this.OnSalesOrderDetailIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderDetailID = value;
				this.SendPropertyChanged("SalesOrderDetailID");
				this.OnSalesOrderDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderQty", DbType="SmallInt NOT NULL")]
	public short OrderQty
	{
		get
		{
			return this._OrderQty;
		}
		set
		{
			if ((this._OrderQty != value))
			{
				this.OnOrderQtyChanging(value);
				this.SendPropertyChanging();
				this._OrderQty = value;
				this.SendPropertyChanged("OrderQty");
				this.OnOrderQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
	public decimal UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPriceDiscount", DbType="Money NOT NULL")]
	public decimal UnitPriceDiscount
	{
		get
		{
			return this._UnitPriceDiscount;
		}
		set
		{
			if ((this._UnitPriceDiscount != value))
			{
				this.OnUnitPriceDiscountChanging(value);
				this.SendPropertyChanging();
				this._UnitPriceDiscount = value;
				this.SendPropertyChanged("UnitPriceDiscount");
				this.OnUnitPriceDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineTotal", AutoSync=AutoSync.Always, DbType="Decimal(38,6) NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public decimal LineTotal
	{
		get
		{
			return this._LineTotal;
		}
		set
		{
			if ((this._LineTotal != value))
			{
				this.OnLineTotalChanging(value);
				this.SendPropertyChanging();
				this._LineTotal = value;
				this.SendPropertyChanged("LineTotal");
				this.OnLineTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid rowguid
	{
		get
		{
			return this._rowguid;
		}
		set
		{
			if ((this._rowguid != value))
			{
				this.OnrowguidChanging(value);
				this.SendPropertyChanging();
				this._rowguid = value;
				this.SendPropertyChanged("rowguid");
				this.OnrowguidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderHeader_SalesOrderDetail", Storage="_SalesOrderHeader", ThisKey="SalesOrderID", OtherKey="SalesOrderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public SalesOrderHeader SalesOrderHeader
	{
		get
		{
			return this._SalesOrderHeader.Entity;
		}
		set
		{
			SalesOrderHeader previousValue = this._SalesOrderHeader.Entity;
			if (((previousValue != value) 
						|| (this._SalesOrderHeader.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SalesOrderHeader.Entity = null;
					previousValue.SalesOrderDetails.Remove(this);
				}
				this._SalesOrderHeader.Entity = value;
				if ((value != null))
				{
					value.SalesOrderDetails.Add(this);
					this._SalesOrderID = value.SalesOrderID;
				}
				else
				{
					this._SalesOrderID = default(int);
				}
				this.SendPropertyChanged("SalesOrderHeader");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="SalesLT.SalesOrderHeader")]
public partial class SalesOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesOrderID;
	
	private byte _RevisionNumber;
	
	private System.DateTime _OrderDate;
	
	private System.DateTime _DueDate;
	
	private System.Nullable<System.DateTime> _ShipDate;
	
	private byte _Status;
	
	private bool _OnlineOrderFlag;
	
	private string _SalesOrderNumber;
	
	private string _PurchaseOrderNumber;
	
	private string _AccountNumber;
	
	private int _CustomerID;
	
	private System.Nullable<int> _ShipToAddressID;
	
	private System.Nullable<int> _BillToAddressID;
	
	private string _ShipMethod;
	
	private string _CreditCardApprovalCode;
	
	private decimal _SubTotal;
	
	private decimal _TaxAmt;
	
	private decimal _Freight;
	
	private decimal _TotalDue;
	
	private string _Comment;
	
	private System.Guid _rowguid;
	
	private System.DateTime _ModifiedDate;
	
	private EntitySet<SalesOrderDetail> _SalesOrderDetails;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnRevisionNumberChanging(byte value);
    partial void OnRevisionNumberChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnOnlineOrderFlagChanging(bool value);
    partial void OnOnlineOrderFlagChanged();
    partial void OnSalesOrderNumberChanging(string value);
    partial void OnSalesOrderNumberChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnShipToAddressIDChanging(System.Nullable<int> value);
    partial void OnShipToAddressIDChanged();
    partial void OnBillToAddressIDChanging(System.Nullable<int> value);
    partial void OnBillToAddressIDChanged();
    partial void OnShipMethodChanging(string value);
    partial void OnShipMethodChanged();
    partial void OnCreditCardApprovalCodeChanging(string value);
    partial void OnCreditCardApprovalCodeChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnTaxAmtChanging(decimal value);
    partial void OnTaxAmtChanged();
    partial void OnFreightChanging(decimal value);
    partial void OnFreightChanged();
    partial void OnTotalDueChanging(decimal value);
    partial void OnTotalDueChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public SalesOrderHeader()
	{
		this._SalesOrderDetails = new EntitySet<SalesOrderDetail>(new Action<SalesOrderDetail>(this.attach_SalesOrderDetails), new Action<SalesOrderDetail>(this.detach_SalesOrderDetails));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesOrderID
	{
		get
		{
			return this._SalesOrderID;
		}
		set
		{
			if ((this._SalesOrderID != value))
			{
				this.OnSalesOrderIDChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderID = value;
				this.SendPropertyChanged("SalesOrderID");
				this.OnSalesOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="TinyInt NOT NULL")]
	public byte RevisionNumber
	{
		get
		{
			return this._RevisionNumber;
		}
		set
		{
			if ((this._RevisionNumber != value))
			{
				this.OnRevisionNumberChanging(value);
				this.SendPropertyChanging();
				this._RevisionNumber = value;
				this.SendPropertyChanged("RevisionNumber");
				this.OnRevisionNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
	public System.DateTime OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
	public System.DateTime DueDate
	{
		get
		{
			return this._DueDate;
		}
		set
		{
			if ((this._DueDate != value))
			{
				this.OnDueDateChanging(value);
				this.SendPropertyChanging();
				this._DueDate = value;
				this.SendPropertyChanged("DueDate");
				this.OnDueDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ShipDate
	{
		get
		{
			return this._ShipDate;
		}
		set
		{
			if ((this._ShipDate != value))
			{
				this.OnShipDateChanging(value);
				this.SendPropertyChanging();
				this._ShipDate = value;
				this.SendPropertyChanged("ShipDate");
				this.OnShipDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineOrderFlag", DbType="Bit NOT NULL")]
	public bool OnlineOrderFlag
	{
		get
		{
			return this._OnlineOrderFlag;
		}
		set
		{
			if ((this._OnlineOrderFlag != value))
			{
				this.OnOnlineOrderFlagChanging(value);
				this.SendPropertyChanging();
				this._OnlineOrderFlag = value;
				this.SendPropertyChanged("OnlineOrderFlag");
				this.OnOnlineOrderFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderNumber", AutoSync=AutoSync.Always, DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public string SalesOrderNumber
	{
		get
		{
			return this._SalesOrderNumber;
		}
		set
		{
			if ((this._SalesOrderNumber != value))
			{
				this.OnSalesOrderNumberChanging(value);
				this.SendPropertyChanging();
				this._SalesOrderNumber = value;
				this.SendPropertyChanged("SalesOrderNumber");
				this.OnSalesOrderNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(25)")]
	public string PurchaseOrderNumber
	{
		get
		{
			return this._PurchaseOrderNumber;
		}
		set
		{
			if ((this._PurchaseOrderNumber != value))
			{
				this.OnPurchaseOrderNumberChanging(value);
				this.SendPropertyChanging();
				this._PurchaseOrderNumber = value;
				this.SendPropertyChanged("PurchaseOrderNumber");
				this.OnPurchaseOrderNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(15)")]
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddressID", DbType="Int")]
	public System.Nullable<int> ShipToAddressID
	{
		get
		{
			return this._ShipToAddressID;
		}
		set
		{
			if ((this._ShipToAddressID != value))
			{
				this.OnShipToAddressIDChanging(value);
				this.SendPropertyChanging();
				this._ShipToAddressID = value;
				this.SendPropertyChanged("ShipToAddressID");
				this.OnShipToAddressIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddressID", DbType="Int")]
	public System.Nullable<int> BillToAddressID
	{
		get
		{
			return this._BillToAddressID;
		}
		set
		{
			if ((this._BillToAddressID != value))
			{
				this.OnBillToAddressIDChanging(value);
				this.SendPropertyChanging();
				this._BillToAddressID = value;
				this.SendPropertyChanged("BillToAddressID");
				this.OnBillToAddressIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipMethod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ShipMethod
	{
		get
		{
			return this._ShipMethod;
		}
		set
		{
			if ((this._ShipMethod != value))
			{
				this.OnShipMethodChanging(value);
				this.SendPropertyChanging();
				this._ShipMethod = value;
				this.SendPropertyChanged("ShipMethod");
				this.OnShipMethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardApprovalCode", DbType="VarChar(15)")]
	public string CreditCardApprovalCode
	{
		get
		{
			return this._CreditCardApprovalCode;
		}
		set
		{
			if ((this._CreditCardApprovalCode != value))
			{
				this.OnCreditCardApprovalCodeChanging(value);
				this.SendPropertyChanging();
				this._CreditCardApprovalCode = value;
				this.SendPropertyChanged("CreditCardApprovalCode");
				this.OnCreditCardApprovalCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money NOT NULL")]
	public decimal SubTotal
	{
		get
		{
			return this._SubTotal;
		}
		set
		{
			if ((this._SubTotal != value))
			{
				this.OnSubTotalChanging(value);
				this.SendPropertyChanging();
				this._SubTotal = value;
				this.SendPropertyChanged("SubTotal");
				this.OnSubTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmt", DbType="Money NOT NULL")]
	public decimal TaxAmt
	{
		get
		{
			return this._TaxAmt;
		}
		set
		{
			if ((this._TaxAmt != value))
			{
				this.OnTaxAmtChanging(value);
				this.SendPropertyChanging();
				this._TaxAmt = value;
				this.SendPropertyChanged("TaxAmt");
				this.OnTaxAmtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freight", DbType="Money NOT NULL")]
	public decimal Freight
	{
		get
		{
			return this._Freight;
		}
		set
		{
			if ((this._Freight != value))
			{
				this.OnFreightChanging(value);
				this.SendPropertyChanging();
				this._Freight = value;
				this.SendPropertyChanged("Freight");
				this.OnFreightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDue", AutoSync=AutoSync.Always, DbType="Money NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public decimal TotalDue
	{
		get
		{
			return this._TotalDue;
		}
		set
		{
			if ((this._TotalDue != value))
			{
				this.OnTotalDueChanging(value);
				this.SendPropertyChanging();
				this._TotalDue = value;
				this.SendPropertyChanged("TotalDue");
				this.OnTotalDueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid rowguid
	{
		get
		{
			return this._rowguid;
		}
		set
		{
			if ((this._rowguid != value))
			{
				this.OnrowguidChanging(value);
				this.SendPropertyChanging();
				this._rowguid = value;
				this.SendPropertyChanged("rowguid");
				this.OnrowguidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderHeader_SalesOrderDetail", Storage="_SalesOrderDetails", ThisKey="SalesOrderID", OtherKey="SalesOrderID")]
	public EntitySet<SalesOrderDetail> SalesOrderDetails
	{
		get
		{
			return this._SalesOrderDetails;
		}
		set
		{
			this._SalesOrderDetails.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesOrderDetails(SalesOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesOrderHeader = this;
	}
	
	private void detach_SalesOrderDetails(SalesOrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesOrderHeader = null;
	}
}
#pragma warning restore 1591
